{"name":"2013 advent calendar gemba","tagline":"","body":"# はじめに\r\n\r\nこのエントリーは[『DevLOVE Advent Calendar 2013 「現場」』](http://devlove.doorkeeper.jp/events/7039)の12月29日（50日目）の記事です。\r\n\r\n前回の記事は[オカモン](https://twitter.com/okam0n)さんによる[記事タイトル](http://)です。\r\n\r\n# まずは自己紹介\r\n\r\n社会人2年目の新米エンジニア[@iery](https://twitter.com/iery)です。新米おいしい！\r\n\r\nハンドルネームは「イエリィ」と読んで欲しいのですが、チェックインする時など「あい・いー・あーる・わい」と言ってたりもするので、読み方にはあまりこだわっていません。\r\n\r\n文系の学部卒ですが、友人からは似非文系と言われます。中学から独学でゲームプログラミングをかじってミニゲーム作ってました。\r\n\r\n今は株式会社ヴァル研究所という会社で働いています。公共交通機関の経路案内ソフト『駅すぱあと』の開発元です。\r\n\r\n## お仕事\r\n\r\nネット広告業界における媒体社として、自社の広告配信サービスと社内向け管理サービスをJavaとRubyで開発・運用しています。\r\nサービスは広告代理店が販売し、代理店との直接のやり取りは隣の販売チームが担っています。\r\n\r\nまた、業務の一環としてアジャイル開発の考え方や手法を社内に導入をしたり、企画に関わったりもしています。\r\n\r\n1年目はAndroidアプリを開発するチームに居ました。Java繋がりとは言え、配置転換にはちょっとビックリ。\r\n\r\n## 最近勉強していること\r\n\r\nシステム思考、自動化、コード設計をメインに勉強しています。仕事優先ならインフラ周りを勉強するとすぐに役立つのは間違いないのですが……オフの勉強はやりたいことを優先しています。（・ω<）\r\n\r\nコミュニティ活動は参加し始めてここ半年ほどです。この記事を書くきっかけになったDevLOVEのイベント（[たてらぶ DevLOVE現場甲子園 完結編](http://devlove.doorkeeper.jp/events/7335)）で、初めてスタッフ側としてお手伝いさせていただきました。\r\n\r\n# 私にとっての現場\r\n\r\n## 現場ってなんだろう？\r\n\r\nまず私なりの現場の定義を考えてみました。\r\n\r\n私にとっての現場は、**「何か課題がある時、それを自分事として捉えて行動する領域」**です。\r\n\r\nこの定義に従うと、「仕事」「私生活」といった捉え方は「現場を性質によって括ったもの」になります。\r\n\r\nでは、私の「仕事」の現場は何か、というと……\r\n\r\n+ 私が所属する広告配信システムの開発チーム\r\n+ 広告の販売チーム\r\n+ 広告の枠（在庫）となるサービスを作っている別の開発チーム（1年目に所属していたチーム）\r\n\r\n今の私にとっては、これらのチームの業務領域が「仕事」の現場です。\r\n\r\n## 「仕事」の現場で何をしてきた／しているのか\r\n\r\n私が良いと感じたマインド、コミュニケーション環境、開発環境、業務フローなどを社内に持ち込んで試しています。\r\n具体的には、\r\n\r\n+ チームのリポジトリをSVNからGitへ移行（12月ごろからGitの勉強を初め、移行は1月から実施）\r\n    + その一環でGitのチーム内トレーナーみたいなことをしたり（他のメンバーは全員先輩でしたが）\r\n    + その流れで新人研修で初めてGit教えたり（前年まではSVNだった）\r\n+ GitHubに移行したのを契機に、コードレビューをリリースまでのフローに組み込み\r\n    + テストを書いてレビューやリファクタリングをしやすく\r\n    + コードの質を高めるために、勇気を出して先輩後輩関係なく容赦なくツッコミを入れ、良いコードには :sushi: を付ける\r\n    + 自分が頂いた指摘箇所は、可能な限り優先して直す（指摘を放置しない）\r\n+ セクションを超えた情報共有と保存が気軽にできるように、社内IRCを活用（話題毎にコミュニティを作る）\r\n    + 話題に適当なチャンネルが無ければ、関係者を集めて作ってしまい、自分から都度話す\r\n        + 広告の販売チームと開発チームを全員集めたチャンネルも作成\r\n+ 相手の時間を尊重しつつ、積極的に質問する（無理に自己解決しようとしない。組織の力を借りる）\r\n    + 逆に質問されたらきちんと返す\r\n\r\nといったことです。\r\n\r\nどれも最初からは思い通りに行きませんでしたが、目指すところ・メリット・デメリットをきちんと見せることで、取り組みに協力してもらえています。\r\n\r\n## 現場で思ったこと\r\n\r\n### 固定観念の罠\r\n\r\n1年目の配属決定後いきなりアプリの開発チームに投入された私は、最初の半年間、セクショナリズムや固定観念の罠に自分からハマっていました。\r\n\r\n+ 開発だから、営業には口出ししない\r\n+ 新人だから、プロセスには口出ししない／重要な意思決定には関わらない\r\n\r\nこうした考え方が主体性を奪っていたことで、楽しいというよりは純粋に精一杯という気分が支配的でした。\r\n\r\n### 行動が変えた意識\r\n\r\n意識が変わる契機になったのは、アジャイル開発とGitの勉強を始めたことです。当時は社内でアジャイル開発とGit／GitHubを導入する動きが始まったところで、チームもアプリのリリースが終わって少し余裕が生まれたタイミングでした。\r\n\r\n「そのうち導入されるなら、今のうちに勉強しておこう」\r\n\r\nというくらいの気持ちでしたが、勉強してみると素晴らしさが分かり、「これはいち早く導入したい！」という気分になりました。これが、私にとって最初のプロセス改善に取り組む動機になりました。\r\n\r\nその後は前述の通り、色々やってます。\r\n\r\n### 働き方をより良く変えるために\r\n\r\n働き方を変えるには、**空気や仕組みを変える**のが効果的だと思っています。\r\n\r\n空気を変える手っ取り早い方法は、**自分から動いて良さに気づいてもらう**ことだと思っています。\r\n\r\nその際に心がけていることは、**必要性を感じたら失敗を恐れないで早く行動する**ことです。そのために、仕組みを作ったり変えたりして**最小限に仕組みを動かす準備ができた時点で**行動に移ります。浅い理解に基いて行動すると失敗も多いですが、振り返りを通じて失敗から学ぶほうが効率的です。最終的に目指した価値が得られれば良いので、途中で失敗してもあまり悔やみません。\r\n\r\n共感した誰かが一緒に動いてくれるようになったら、後は仕組みが回って空気も作ってくれるので楽になります。自転しない仕組みは導入に失敗したか、本質的な不整合があるか、そもそも不要か、きちんと見極めます。\r\n\r\n## 何のためにしてきたか\r\n\r\nちょっとワガママですが、\r\n\r\n**「自分が望むやり方で、社会に最大限貢献する／できるようになること、それによって生計を立てること。」**\r\n\r\nこれが就活中から変わっていない、私の人生における究極の目的です。\r\n\r\nこの目的達成のために、チーム全体、密接に関係する他のチーム、会社全体、取引先、サービスのユーザー、業界、ユーザーを取り巻く社会にまで、当事者意識をだんだんと広げていきたいと思っています。\r\n\r\n当事者意識の拡大には、様々な認識を共有することを通じて個々人の知見を広げていくことが最初のステップだと考えています。未知の領域で当事者意識なんて持ちようがありません。\r\n\r\n会社は経営方針やセクションなどで個々人の仕事や知見の方向付けをしてくれますが、社会が抱える課題を**組織全体として**合理的に解決することで価値を生み出し、その対価としてお金を頂いているということを忘れてはならないと思っています。**私は普段忘れがちですが。**\r\n\r\n## 何をするつもりか\r\n\r\n私を取り巻く現場が私をより良く磨いてくれるように、私自身と現場の両方を磨いていきたいと思っています。\r\n\r\n# 終わりに\r\n\r\n私にとって初めての公開エントリーでしたが、楽しんで頂けたでしょうか。\r\n\r\n次回、12月30日（51日目）の記事は大佐さんです。お楽しみに！\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}